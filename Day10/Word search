/**
 * @param {character[][]} board
 * @param {string} word
 * @return {boolean}
 */
var exist = function(board, word) {
    if (board.length === 0 || board[0].length === 0) return false;

    const directions = [[0, 1], [1, 0], [0, -1], [-1, 0]];

    const dfs = (i, j, k) => {
        if (k === word.length) return true;
        if (i < 0 || i >= board.length || j < 0 || j >= board[0].length || board[i][j] !== word[k]) {
            return false;
        }
      
        const temp = board[i][j];
        board[i][j] = '#';

        
        for (const [dx, dy] of directions) {
            const newI = i + dx;
            const newJ = j + dy;
            if (dfs(newI, newJ, k + 1)) return true;
        }

        
        board[i][j] = temp;
        return false;
    };

    for (let i = 0; i < board.length; i++) {
        for (let j = 0; j < board[0].length; j++) {
            if (dfs(i, j, 0)) return true;
        }
    }

    return false;
};
