/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var deleteDuplicates = function(head) {
    let dummy = new ListNode(0);
    dummy.next = head;
    
    // Initialize the current node as dummy
    let current = dummy;
    
    while (current.next !== null && current.next.next !== null) {
        if (current.next.val === current.next.next.val) {
            // Found duplicates, move through all duplicates
            let duplicateVal = current.next.val;
            while (current.next !== null && current.next.val === duplicateVal) {
                current.next = current.next.next; // Skip duplicates
            }
        } else {
            // No duplicates, move forward
            current = current.next;
        }
    }
    
    // Return the next node of dummy which is the new head
    return dummy.next;
};
