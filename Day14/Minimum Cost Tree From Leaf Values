/**
 * @param {number[]} arr
 * @return {number}
 */
var mctFromLeafValues = function(arr) {
    const n = arr.length;
    const dp = Array(n).fill(0).map(() => Array(n).fill(Infinity));
    const maxInRange = Array.from(Array(n), () => Array(n).fill(0));
    
    
    for (let i = 0; i < n; i++) {
        let maxVal = arr[i];
        for (let j = i; j < n; j++) {
            maxVal = Math.max(maxVal, arr[j]);
            maxInRange[i][j] = maxVal;
        }
    }
    
 
    for (let i = 0; i < n; i++) {
        dp[i][i] = 0;
    }
    
  
    for (let length = 2; length <= n; length++) {
        for (let i = 0; i <= n - length; i++) {
            const j = i + length - 1;
            for (let k = i; k < j; k++) {
                const cost = dp[i][k] + dp[k + 1][j] + maxInRange[i][k] * maxInRange[k + 1][j];
                dp[i][j] = Math.min(dp[i][j], cost);
            }
        }
    }
    
    return dp[0][n - 1];
};

