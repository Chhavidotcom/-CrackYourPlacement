/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */
var isSymmetric = function(root) {
    function isMirror(t1, t2) {
        // Both trees are empty, so they are symmetric
        if (t1 === null && t2 === null) {
            return true;
        }
        // One tree is empty, so they are not symmetric
        if (t1 === null || t2 === null) {
            return false;
        }
        // Both trees are non-empty, compare their values and subtrees
        return (t1.val === t2.val) &&
               isMirror(t1.left, t2.right) &&
               isMirror(t1.right, t2.left);
    }

    // Start the comparison with the root's left and right children
    return isMirror(root, root);
};
